package Quiz22;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.hpsf.Array;
import org.apache.poi.xssf.usermodel.*;
import javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec;
import org.apache.poi.xssf.usermodel.XSSFSheet;


public class RegexQuiz03 {

	public static void main(String[] args) throws IOException {


		/*
		 * 1. 버퍼리더를 사용해서 건담.txt를 읽어들입니다.
		 *    readLine으로 한 줄씩 읽어들입니다.
		 * 
		 * 2. 정규표현식을 이용해서 날짜, 지점, 등급, 내용, 가격을 패턴분석
		 * 	  Product 객체에 저장하고, 리스트에 저장
		 * 
		 * 3. 외부 라이브러리 POI - 자바에서 엑셀파일 xlsx 형태로 파일을 쓸 수 있도록 하는 기능
		 * 	  하나의 시트에 각 행데이터를 엑셀파일로 추출...
		 * 
		 * hint. 가격패턴의 마지막과 등급패턴의 마지막을 잘라서 중간을 얻는 방식..
		 */


		List<Product> list = new ArrayList<>();
		String path = "C:\\Users\\user\\Desktop\\course\\java\\work\\Quiz\\src\\Quiz22\\건담.txt";

		try (BufferedReader br = new BufferedReader( new FileReader(path)) ) {

			//한 줄씩 파일 가져옴.
			String str;						
			while( (str = br.readLine()) != null ){
				
				//패턴은 4개면 됨. 5개 기준일 때 4번째가 패턴으로 자르기 애매해서.
				String pattern1 = "[0-9]{8}-[0-9]{2}-[0-9]{12,13}";
				String pattern2 = "[가-힣]+[가-힣]+(점|)"; //점이 있거나 없거나. 가장 처음 발견되는 한글로 사용할 것. / [가-힣]+(강남점|평내호평점|인천점)도 가능.근데 너무 많아서 이렇게...
				String pattern3 = "\\[+[가-힣A-Z]+\\]"; //  [[가-힣A-Z]]+ 도 가능할거 같긴함.
				String pattern4 = "\\d+,*\\d*원"; //가격
			
				Matcher m1 = Pattern.compile(pattern1).matcher(str);
				Matcher m2 = Pattern.compile(pattern2).matcher(str);
				Matcher m3 = Pattern.compile(pattern3).matcher(str);
				Matcher m4 = Pattern.compile(pattern4).matcher(str);
				
				if(m1.find() && m2.find() && m3.find() && m4.find()  ) {
					
					System.out.println("======================================================");
					String day = m1.group();
					String store = m2.group();
					String grade = m3.group();
					String price = m4.group();
					
					System.out.println(day);
					System.out.println(store);
					System.out.println(grade);
					System.out.println(price);
				}
				
				
				
				
				
			}

		}		

		

			Product p = new Product(m1.group(), m2.group(), m3.group(), s, m5.group() );					

			list.add(p);					

			System.out.println(m1.group());
			System.out.println(m2.group());
			System.out.println(m3.group());
			//System.out.println(m4.group());
			System.out.println(s);
			System.out.println(m5.group());
			//
			System.out.println("----------------------------------------------------------------");
		}

		//Workbook 생성
		XSSFWorkbook workbook = new XSSFWorkbook();
		XSSFSheet sheet = workbook.createSheet("건담");

		//Sheet 생성
		Sheet sheet1 = xlsWb.createSheet("firstSheet");






		catch (FileNotFoundException e) {
			e.printStackTrace();
		}


		//List<String> list =  Arrays.asList();

		//System.out.println(list.toString());







	}
}

/*String day = str.substring(1,25); 
				String store = str.substring(27,35);
				String grade = str.substring(27,35);
				String detail = str.substring(27,35);
				String price = str.substring(27,35);
 */

